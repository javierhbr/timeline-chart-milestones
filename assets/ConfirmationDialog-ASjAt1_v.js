import{r as s,a0 as A,j as t,a1 as T,a2 as m,a3 as $,y as M,a4 as I,G as k,a5 as z,a6 as F,a7 as G,a8 as v,a9 as L,aa as H,ab as V,$ as i,ac as D}from"./index-CzFx0A7U.js";var x="AlertDialog",[W,ve]=M(x,[A]),n=A(),j=e=>{const{__scopeAlertDialog:a,...o}=e,r=n(a);return t.jsx(T,{...r,...o,modal:!0})};j.displayName=x;var Y="AlertDialogTrigger",q=s.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return t.jsx(V,{...l,...r,ref:a})});q.displayName=Y;var B="AlertDialogPortal",N=e=>{const{__scopeAlertDialog:a,...o}=e,r=n(a);return t.jsx(L,{...r,...o})};N.displayName=B;var J="AlertDialogOverlay",h=s.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return t.jsx(H,{...l,...r,ref:a})});h.displayName=J;var d="AlertDialogContent",[K,Q]=W(d),U=z("AlertDialogContent"),y=s.forwardRef((e,a)=>{const{__scopeAlertDialog:o,children:r,...l}=e,g=n(o),c=s.useRef(null),f=m(a,c),u=s.useRef(null);return t.jsx($,{contentName:d,titleName:C,docsSlug:"alert-dialog",children:t.jsx(K,{scope:o,cancelRef:u,children:t.jsxs(I,{role:"alertdialog",...g,...l,ref:f,onOpenAutoFocus:k(l.onOpenAutoFocus,p=>{p.preventDefault(),u.current?.focus({preventScroll:!0})}),onPointerDownOutside:p=>p.preventDefault(),onInteractOutside:p=>p.preventDefault(),children:[t.jsx(U,{children:r}),t.jsx(Z,{contentRef:c})]})})})});y.displayName=d;var C="AlertDialogTitle",_=s.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return t.jsx(F,{...l,...r,ref:a})});_.displayName=C;var b="AlertDialogDescription",R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return t.jsx(G,{...l,...r,ref:a})});R.displayName=b;var X="AlertDialogAction",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return t.jsx(v,{...l,...r,ref:a})});E.displayName=X;var S="AlertDialogCancel",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,{cancelRef:l}=Q(S,o),g=n(o),c=m(a,l);return t.jsx(v,{...g,...r,ref:c})});P.displayName=S;var Z=({contentRef:e})=>{const a=`\`${d}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${d}\` by passing a \`${b}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${d}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{document.getElementById(e.current?.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ee=j,ae=N,w=h,te=y,oe=E,re=P,le=_,se=R;function ne({...e}){return t.jsx(ee,{"data-slot":"alert-dialog",...e})}function ie({...e}){return t.jsx(ae,{"data-slot":"alert-dialog-portal",...e})}const O=s.forwardRef(({className:e,...a},o)=>t.jsx(w,{ref:o,"data-slot":"alert-dialog-overlay",className:i("data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",e),...a}));O.displayName=w.displayName;function ce({className:e,...a}){return t.jsxs(ie,{children:[t.jsx(O,{}),t.jsx(te,{"data-slot":"alert-dialog-content",className:i("bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",e),...a})]})}function de({className:e,...a}){return t.jsx("div",{"data-slot":"alert-dialog-header",className:i("flex flex-col gap-2 text-center sm:text-left",e),...a})}function ge({className:e,...a}){return t.jsx("div",{"data-slot":"alert-dialog-footer",className:i("flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",e),...a})}function pe({className:e,...a}){return t.jsx(le,{"data-slot":"alert-dialog-title",className:i("text-lg font-semibold",e),...a})}function ue({className:e,...a}){return t.jsx(se,{"data-slot":"alert-dialog-description",className:i("text-muted-foreground text-sm",e),...a})}function fe({className:e,...a}){return t.jsx(oe,{className:i(D(),e),...a})}function Ae({className:e,...a}){return t.jsx(re,{className:i(D({variant:"outline"}),e),...a})}function De({isOpen:e,onClose:a,onConfirm:o,title:r,description:l,confirmLabel:g="Confirm",cancelLabel:c="Cancel",variant:f="default"}){const u=()=>{o(),a()};return t.jsx(ne,{open:e,onOpenChange:a,children:t.jsxs(ce,{children:[t.jsxs(de,{children:[t.jsx(pe,{children:r}),t.jsx(ue,{children:l})]}),t.jsxs(ge,{children:[t.jsx(Ae,{onClick:a,children:c}),t.jsx(fe,{onClick:u,className:f==="destructive"?"bg-red-600 hover:bg-red-700 focus:ring-red-600":void 0,children:g})]})]})})}export{De as ConfirmationDialog};
