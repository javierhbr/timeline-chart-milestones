import{r as s,j as a,Y as A,y as T,E as $,Z as M,X as i,_ as m}from"./index-DeksGDDi.js";import{c as D,R as I,W as k,C as z,T as F,D as L,a as v,P as G,O as W,b as Y}from"./index-Dhp8sDxk.js";var x="AlertDialog",[H,ve]=T(x,[D]),n=D(),j=e=>{const{__scopeAlertDialog:t,...o}=e,r=n(t);return a.jsx(I,{...r,...o,modal:!0})};j.displayName=x;var V="AlertDialogTrigger",q=s.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return a.jsx(Y,{...l,...r,ref:t})});q.displayName=V;var B="AlertDialogPortal",N=e=>{const{__scopeAlertDialog:t,...o}=e,r=n(t);return a.jsx(G,{...r,...o})};N.displayName=B;var X="AlertDialogOverlay",h=s.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return a.jsx(W,{...l,...r,ref:t})});h.displayName=X;var d="AlertDialogContent",[Z,J]=H(d),K=M("AlertDialogContent"),y=s.forwardRef((e,t)=>{const{__scopeAlertDialog:o,children:r,...l}=e,g=n(o),c=s.useRef(null),f=A(t,c),u=s.useRef(null);return a.jsx(k,{contentName:d,titleName:C,docsSlug:"alert-dialog",children:a.jsx(Z,{scope:o,cancelRef:u,children:a.jsxs(z,{role:"alertdialog",...g,...l,ref:f,onOpenAutoFocus:$(l.onOpenAutoFocus,p=>{p.preventDefault(),u.current?.focus({preventScroll:!0})}),onPointerDownOutside:p=>p.preventDefault(),onInteractOutside:p=>p.preventDefault(),children:[a.jsx(K,{children:r}),a.jsx(U,{contentRef:c})]})})})});y.displayName=d;var C="AlertDialogTitle",_=s.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return a.jsx(F,{...l,...r,ref:t})});_.displayName=C;var b="AlertDialogDescription",R=s.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return a.jsx(L,{...l,...r,ref:t})});R.displayName=b;var Q="AlertDialogAction",E=s.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,l=n(o);return a.jsx(v,{...l,...r,ref:t})});E.displayName=Q;var P="AlertDialogCancel",S=s.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,{cancelRef:l}=J(P,o),g=n(o),c=A(t,l);return a.jsx(v,{...g,...r,ref:c})});S.displayName=P;var U=({contentRef:e})=>{const t=`\`${d}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${d}\` by passing a \`${b}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${d}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{document.getElementById(e.current?.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},ee=j,te=N,w=h,ae=y,oe=E,re=S,le=_,se=R;function ne({...e}){return a.jsx(ee,{"data-slot":"alert-dialog",...e})}function ie({...e}){return a.jsx(te,{"data-slot":"alert-dialog-portal",...e})}const O=s.forwardRef(({className:e,...t},o)=>a.jsx(w,{ref:o,"data-slot":"alert-dialog-overlay",className:i("data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",e),...t}));O.displayName=w.displayName;function ce({className:e,...t}){return a.jsxs(ie,{children:[a.jsx(O,{}),a.jsx(ae,{"data-slot":"alert-dialog-content",className:i("bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",e),...t})]})}function de({className:e,...t}){return a.jsx("div",{"data-slot":"alert-dialog-header",className:i("flex flex-col gap-2 text-center sm:text-left",e),...t})}function ge({className:e,...t}){return a.jsx("div",{"data-slot":"alert-dialog-footer",className:i("flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",e),...t})}function pe({className:e,...t}){return a.jsx(le,{"data-slot":"alert-dialog-title",className:i("text-lg font-semibold",e),...t})}function ue({className:e,...t}){return a.jsx(se,{"data-slot":"alert-dialog-description",className:i("text-muted-foreground text-sm",e),...t})}function fe({className:e,...t}){return a.jsx(oe,{className:i(m(),e),...t})}function Ae({className:e,...t}){return a.jsx(re,{className:i(m({variant:"outline"}),e),...t})}function xe({isOpen:e,onClose:t,onConfirm:o,title:r,description:l,confirmLabel:g="Confirm",cancelLabel:c="Cancel",variant:f="default"}){const u=()=>{o(),t()};return a.jsx(ne,{open:e,onOpenChange:t,children:a.jsxs(ce,{children:[a.jsxs(de,{children:[a.jsx(pe,{children:r}),a.jsx(ue,{children:l})]}),a.jsxs(ge,{children:[a.jsx(Ae,{onClick:t,children:c}),a.jsx(fe,{onClick:u,className:f==="destructive"?"bg-red-600 hover:bg-red-700 focus:ring-red-600":void 0,children:g})]})]})})}export{xe as ConfirmationDialog};
